<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="userServiceImpl" class="com.spring.service.impl.UserServiceImpl"/>
    <bean id="orderServiceImpl" class="com.spring.service.impl.OrderServiceImpl"/>

    <!--定义两个 advice-->
    <bean id="logArgsAdvice" class="com.spring.service.aop.LogArgsAdvice"/>
    <bean id="logResultAdvice" class="com.spring.service.aop.LogResultAdvice"/>

    <!--定义两个 advisor-->
    <!--记录 create* 方法的传参-->
    <bean id="logArgsAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
        <property name="advice" ref="logArgsAdvice" />
        <property name="pattern" value="com.spring.service.*.create.*" />
    </bean>
    <!--记录 query* 的返回值-->
    <bean id="logResultAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
        <property name="advice" ref="logResultAdvice" />
        <property name="pattern" value="com.spring.service.*.query.*" />
    </bean>

    <!--定义DefaultAdvisorAutoProxyCreator -->
<!--   DefaultAdvisorAutoProxyCreator 是让 ioc 容器中的所有 advisor 来匹配方法，advisor 内部都是有 advice 的，让它们内部的 advice 来执行拦截处理-->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />

</beans>